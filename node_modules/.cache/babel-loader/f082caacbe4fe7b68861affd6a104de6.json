{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\Task Boban Stojanov\\\\src\\\\components\\\\Todo\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = props => {\n  _s();\n\n  const [enteredName, setEnteredName] = useState(\"\");\n  const [enteredDate, setEnteredDate] = useState(\"\");\n  const [enteredStatus, setEnteredStatus] = useState(false);\n\n  const nameChangeHandler = event => {\n    setEnteredName(event.target.value);\n  };\n\n  const dateChangeHandler = event => {\n    setEnteredDate(event.target.value);\n  };\n\n  const statusChangeHandler = event => {\n    setEnteredStatus(event.target.value);\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    const todoData = {\n      name: enteredName,\n      date: new Date(enteredDate),\n      status: enteredStatus\n    };\n    props.onSaveTodoData(todoData);\n    setEnteredName(\"\");\n    setEnteredDate(\"\");\n    setEnteredStatus(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"new-todo__controls\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Name\",\n          name: \"name\",\n          onChange: nameChangeHandler,\n          value: enteredName,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"date\",\n          placeholder: \"Date\",\n          name: \"date\",\n          onChange: dateChangeHandler,\n          value: enteredDate,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"select\", {\n          name: \"Status\",\n          onChange: statusChangeHandler,\n          value: enteredStatus,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(\"option\", {\n            value: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Active\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n            children: \"Completed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: props.onCancel,\n        children: \"Cancel\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add ToDo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"fLZmI7iBQrQnxQakObltuYLc7Qo=\");\n\n_c = TodoForm;\nexport default TodoForm; //  Да се креира ToDo апликација, во која секоја ставка ќе има Name, Date и Status (Active, Completed).\n// Секоја ставка да може да се едитира и брише.\n// Листата да може да се сортира по сите колони.\n// Да има филтер по Date и Status.\n// Апликацијата да се направи со HTML5, CSS3 и ES6 (или Angular 2+) и решението да се постави на GitHub.\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/User/Desktop/Task Boban Stojanov/src/components/Todo/TodoForm.js"],"names":["useState","TodoForm","props","enteredName","setEnteredName","enteredDate","setEnteredDate","enteredStatus","setEnteredStatus","nameChangeHandler","event","target","value","dateChangeHandler","statusChangeHandler","submitHandler","preventDefault","todoData","name","date","Date","status","onSaveTodoData","onCancel"],"mappings":"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","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst TodoForm = (props) => {\r\n  const [enteredName, setEnteredName] = useState(\"\");\r\n  const [enteredDate, setEnteredDate] = useState(\"\");\r\n  const [enteredStatus, setEnteredStatus] = useState(false);\r\n\r\n  const nameChangeHandler = (event) => {\r\n    setEnteredName(event.target.value);\r\n  };\r\n\r\n  const dateChangeHandler = (event) => {\r\n    setEnteredDate(event.target.value);\r\n  };\r\n\r\n  const statusChangeHandler = (event) => {\r\n    setEnteredStatus(event.target.value);\r\n  };\r\n\r\n  const submitHandler = (event) => {\r\n    event.preventDefault();\r\n\r\n    const todoData = {\r\n      name: enteredName,\r\n      date: new Date(enteredDate),\r\n      status: enteredStatus,\r\n    };\r\n\r\n    props.onSaveTodoData(todoData);\r\n    setEnteredName(\"\");\r\n    setEnteredDate(\"\");\r\n    setEnteredStatus(\"\");\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={submitHandler}>\r\n      <div className=\"new-todo__controls\">\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            onChange={nameChangeHandler}\r\n            value={enteredName}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type=\"date\"\r\n            placeholder=\"Date\"\r\n            name=\"date\"\r\n            onChange={dateChangeHandler}\r\n            value={enteredDate}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <select\r\n            name=\"Status\"\r\n            onChange={statusChangeHandler}\r\n            value={enteredStatus}\r\n            required\r\n          >\r\n            <option value=\"\"></option>\r\n            <option>Active</option>\r\n            <option>Completed</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <button type=\"button\" onClick={props.onCancel}>\r\n          Cancel\r\n        </button>\r\n        <button type=\"submit\">Add ToDo</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n\r\n//  Да се креира ToDo апликација, во која секоја ставка ќе има Name, Date и Status (Active, Completed).\r\n\r\n// Секоја ставка да може да се едитира и брише.\r\n\r\n// Листата да може да се сортира по сите колони.\r\n\r\n// Да има филтер по Date и Status.\r\n\r\n// Апликацијата да се направи со HTML5, CSS3 и ES6 (или Angular 2+) и решението да се постави на GitHub.\r\n"]},"metadata":{},"sourceType":"module"}